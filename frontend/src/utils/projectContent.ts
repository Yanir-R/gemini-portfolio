export const getProjectTerminalContent = (slug: string): string | null => {
  switch (slug) {
    case 'reelsensei':
      return `# ReelSensei - AI Gaming Highlights

üéÆ AI-Powered Gaming Video Highlight Generation

An innovative platform that automatically transforms gaming videos into epic 
highlight reels using advanced AI technology. Built with modern cloud-native 
architecture for optimal performance and scalability.

## üéØ Core Features
‚Ä¢ Vertex AI Integration - Intelligent video analysis
‚Ä¢ Smart Detection - Identifies epic gaming moments and clutch plays  
‚Ä¢ Multi-Game Support - Optimized for FPS, MOBA, and other genres
‚Ä¢ Quality Scoring - AI-powered confidence ratings
‚Ä¢ Gaming Profile System - XP-based progression with achievements

## ‚öôÔ∏è Technical Architecture

### Frontend Stack
‚Ä¢ Next.js 15.3.1 with App Router pattern
‚Ä¢ React 19 with TypeScript for type safety
‚Ä¢ Tailwind CSS with custom gaming-themed design
‚Ä¢ Firebase Authentication with persistent sessions
‚Ä¢ Real-time updates via Firestore listeners

### Backend Infrastructure  
‚Ä¢ FastAPI with async/await patterns
‚Ä¢ Firebase for real-time operations
‚Ä¢ Google Cloud Platform integration
‚Ä¢ Vertex AI for video analysis
‚Ä¢ Cloud Storage for file management
‚Ä¢ GCP Batch for video processing
‚Ä¢ Cloud Tasks for job orchestration

### Performance & Cost Optimization
‚Ä¢ Spot VM Strategy - 70-80% compute cost savings
‚Ä¢ CDN Edge Optimization - Global content delivery
‚Ä¢ Intelligent Batching - Efficient resource utilization
‚Ä¢ Regional Data Placement - Minimized egress costs
‚Ä¢ Auto-scaling Workers - Dynamic load management

### Security & Infrastructure
‚Ä¢ Google Cloud Armor - DDoS protection & WAF rules
‚Ä¢ Load Balancers - Global HTTP(S) with health checks
‚Ä¢ HTTP-only Cookies - Secure session management
‚Ä¢ Rate Limiting - 100 requests/minute per IP
‚Ä¢ Comprehensive Security Headers

## üöÄ Video Processing Pipeline
1. Upload ‚Üí File validation and GCS storage
2. Job Creation ‚Üí Firestore job document  
3. Batch Processing ‚Üí GCP Batch worker
4. AI Analysis ‚Üí Vertex AI multimodal LLM
5. Clip Extraction ‚Üí FFmpeg-based processing
6. Storage & CDN ‚Üí Public highlight delivery
7. Completion ‚Üí Real-time status updates

## üìä Key Metrics
‚Ä¢ 76-88% cost reduction through intelligent optimization
‚Ä¢ Real-time processing status without polling overhead
‚Ä¢ Concurrent job limits (3 per user, 10 global)
‚Ä¢ Microservice architecture with clean separation
‚Ä¢ Production-ready with Google Cloud Run deployment

Built with ‚ù§Ô∏è for the gaming community`

    case 'ai-chat-portfolio':
      return `# AI Chat Portfolio

ü§ñ Intelligent Portfolio Website with AI Assistant

A full-stack AI-powered portfolio website that allows visitors to interact 
with an AI assistant trained on personal and professional information. 
Built with modern web technologies and deployed on Google Cloud Run.

## üéØ Core Features
‚Ä¢ Real-time AI Chat Interface - Context-aware conversations
‚Ä¢ Document Management System - Private/public information handling
‚Ä¢ Responsive Design - Dark theme with particle animations
‚Ä¢ Email Contact System - Validation and notification
‚Ä¢ Multi-environment Configuration - Dev/prod deployment

## ‚öôÔ∏è Technical Architecture

### Frontend Stack
‚Ä¢ React 18 with TypeScript for type safety
‚Ä¢ Vite for fast development and building
‚Ä¢ TailwindCSS for modern styling
‚Ä¢ Particle animations for visual appeal
‚Ä¢ Responsive design with mobile optimization

### Backend Infrastructure
‚Ä¢ FastAPI with Python 3.8+ for high performance
‚Ä¢ Google Gemini AI for intelligent responses
‚Ä¢ Document-based system with markdown files
‚Ä¢ RESTful API design with proper error handling
‚Ä¢ CORS configuration for cross-origin requests

### AI Integration
‚Ä¢ Google Gemini AI for natural language processing
‚Ä¢ Context-aware responses based on uploaded documents
‚Ä¢ Intelligent document parsing and indexing
‚Ä¢ Real-time AI response generation
‚Ä¢ Conversation memory and context retention

### Cloud & Deployment
‚Ä¢ Google Cloud Platform (GCP) hosting
‚Ä¢ Google Cloud Run for serverless deployment
‚Ä¢ Docker containerization for consistency
‚Ä¢ GitHub Actions for automated CI/CD
‚Ä¢ Multi-stage builds for optimized containers

## üèóÔ∏è Architecture Overview
The application follows clean separation of concerns:
‚Ä¢ React frontend handles UI/UX with TypeScript
‚Ä¢ FastAPI backend manages AI integration
‚Ä¢ Google Gemini AI provides intelligent responses
‚Ä¢ Docker ensures consistent deployment
‚Ä¢ Cloud Run provides scalable hosting

## üöÄ Development Workflow
1. Document Upload ‚Üí Markdown file processing
2. AI Training ‚Üí Context building from documents
3. User Query ‚Üí Natural language processing
4. AI Response ‚Üí Contextual answer generation
5. Real-time Display ‚Üí Instant chat interface
6. Continuous Learning ‚Üí Context improvement

## üìä Key Features
‚Ä¢ Intelligent conversation with portfolio context
‚Ä¢ Real-time response generation
‚Ä¢ Mobile-responsive design
‚Ä¢ Dark theme with modern aesthetics
‚Ä¢ Production-ready deployment
‚Ä¢ Scalable cloud architecture

Built to showcase modern full-stack development skills`

    default:
      return null
  }
} 